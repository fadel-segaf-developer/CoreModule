#ifndef TEXTURE_MANAGER_H
#define TEXTURE_MANAGER_H

#include <string>
#include <vector>
#include <GLFWManager.h>

// Struct to represent a texture, including its name, file path, and OpenGL ID.
struct Texture {
    std::string name;        // Logical name to reference the texture
    std::string filePath;    // Path to the texture file
    GLuint id;               // OpenGL texture ID (generated by glGenTextures)
};

class TextureManager {
public:
    // Initialize and load all textures
    static void initialize();

    // Retrieve a texture by its logical name (returns nullptr if not found)
    static const Texture* getTexture(const std::string& name);

    // Cleanup all loaded textures (free GPU resources)
    static void cleanup();

private:
    // List of all loaded textures
    static std::vector<Texture> textures;

    // Load a single texture and return its OpenGL ID
    static GLuint loadTexture(const std::string& filePath);

    // Helper function to check if a texture already exists by name
    static bool textureExists(const std::string& name);
};

#endif
